<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.exam.mapper.ExamTaskRoleMapper">
    
    <resultMap type="ExamTaskRole" id="ExamTaskRoleResult">
        <result property="id"    column="id"    />
        <result property="taskId"    column="task_id"    />
        <result property="roleId"    column="role_id"    />
        <result property="createUser"    column="create_user"    />
        <result property="modifyUser"    column="modify_user"    />
        <result property="createTime"    column="create_time"    />
        <result property="modifyTime"    column="modify_time"    />
    </resultMap>

    <sql id="selectExamTaskRoleVo">
        select id, task_id, role_id, create_user, modify_user, create_time, modify_time from exam_task_role
    </sql>

    <select id="selectExamTaskRoleList" parameterType="ExamTaskRole" resultMap="ExamTaskRoleResult">
        <include refid="selectExamTaskRoleVo"/>
        <where>  
            <if test="taskId != null "> and task_id = #{taskId}</if>
            <if test="roleId != null "> and role_id = #{roleId}</if>
            <if test="createUser != null  and createUser != ''"> and create_user = #{createUser}</if>
            <if test="modifyUser != null  and modifyUser != ''"> and modify_user = #{modifyUser}</if>
            <if test="modifyTime != null "> and modify_time = #{modifyTime}</if>
        </where>
    </select>
    
    <select id="selectExamTaskRoleById" parameterType="Long" resultMap="ExamTaskRoleResult">
        <include refid="selectExamTaskRoleVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertExamTaskRole" parameterType="ExamTaskRole" useGeneratedKeys="true" keyProperty="id">
        insert into exam_task_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">task_id,</if>
            <if test="roleId != null">role_id,</if>
            <if test="createUser != null">create_user,</if>
            <if test="modifyUser != null">modify_user,</if>
            <if test="createTime != null">create_time,</if>
            <if test="modifyTime != null">modify_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskId != null">#{taskId},</if>
            <if test="roleId != null">#{roleId},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="modifyUser != null">#{modifyUser},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="modifyTime != null">#{modifyTime},</if>
         </trim>
    </insert>

    <update id="updateExamTaskRole" parameterType="ExamTaskRole">
        update exam_task_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="taskId != null">task_id = #{taskId},</if>
            <if test="roleId != null">role_id = #{roleId},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="modifyUser != null">modify_user = #{modifyUser},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="modifyTime != null">modify_time = #{modifyTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteExamTaskRoleById" parameterType="Long">
        delete from exam_task_role where id = #{id}
    </delete>

    <delete id="deleteExamTaskRoleByIds" parameterType="String">
        delete from exam_task_role where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>